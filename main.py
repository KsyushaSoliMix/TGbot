# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏
import re
from pathlib import Path
import telebot
import os
import sqlite3
from telebot import types

import sqllite_db

# –¢–æ–∫–µ–Ω –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞

token = '5305392177:AAGRLxjBJ43TgZSo7qC8XoXRJ75bKCzh7Fk'
bot = telebot.TeleBot(token)
# ----------------------------------------------------------

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥

languages = ["üá¨üáß English", "üá©üá™ Deutsch", "üá∑üá∫ –†—É—Å—Å–∫–∏–π"]

help_line = "/new_language - –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —è–∑—ã–∫.\n" \
            "/my_languages - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–∂–µ –∏–∑—É—á–∞–µ–º—ã–µ –≤–∞–º–∏ —è–∑—ã–∫–∏\n" \
            "/study *—è–∑—ã–∫* - –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–∞.\n"

create_users = """
INSERT INTO users 
   (user_id, languages,vocabulary_eng, vocabulary_deu)
VALUES (?, ?, ?, ?);"""

# ----------------------------------------------------------

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–æ–≤:
def get_languages(user_id):
    info = sqllite_db.cursor.execute('SELECT * FROM users WHERE user_id=?', (user_id,))
    record = info.fetchone()
    return record[1]


def set_language(user_id, language):
    help_language = get_languages(user_id) + language + "&"
    sqllite_db.cursor.execute('UPDATE users SET languages = ? WHERE user_id = ?', (help_language, user_id))
    sqllite_db.connection.commit()

# ----------------------------------------------------------


@bot.message_handler(commands=['start'])
def start_message(message):
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ —Ç–æ, –±—ã–ª –ª–∏ –æ–Ω –¥–æ —ç—Ç–æ–≥–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
    info = sqllite_db.cursor.execute('SELECT * FROM users WHERE user_id=?', (message.from_user.id,))

    info.fetchone()
    if info.fetchone() is None:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç " + message.from_user.first_name + "!\n" \
                                                                                     "Study language bot –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤ –∏–∑—É—á–µ–Ω–∏–∏ —Ä–∞–∑–Ω—ã—Ö –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤.\n" \
                                                                                     "–í–≤–µ–¥–∏ /help –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.")
        Path('C:\\Users\\Natasha\\PycharmProjects\\TGbot_orig\\{}_eng.txt'.format(message.chat.id)).touch()
        # open('C:\\Users\\Natasha\\PycharmProjects\\TGbot_orig\\{}_eng.txt'.format(message.chat.id), "w").write("English vocabulary")
        file_eng = open('C:\\Users\\Natasha\\PycharmProjects\\TGbot_orig\\{}_eng.txt'.format(message.chat.id), "rb").read()

        Path('C:\\Users\\Natasha\\PycharmProjects\\TGbot_orig\\{}_deu.txt'.format(message.chat.id)).touch()

        file_deu = open('C:\\Users\\Natasha\\PycharmProjects\\TGbot_orig\\{}_deu.txt'.format(message.chat.id), "rb").read()

        person_data = (message.from_user.id, "", sqlite3.Binary(file_eng), sqlite3.Binary(file_deu))
        sqllite_db.cursor.execute(create_users, person_data)
        sqllite_db.connection.commit()
    else:
        bot.send_message(message.chat.id,
                         "–ü—Ä–∏–≤–µ—Ç " + message.from_user.first_name + "! –ì–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ?\n–í–≤–æ–¥–∏ –∫–æ–º–∞–Ω–¥—É /study –∏ –ø–æ–µ—Ö–∞–ª–∏!!!")


@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, help_line)

# –í—ã–±–æ—Ä —è–∑—ã–∫–æ–≤:
@bot.message_handler(commands=['new_language'])
def new_language_message(message):
    users_languages = get_languages(message.from_user.id)
    split_user_languages = re.split("&", users_languages)
    other_languages = languages

    for i in range(0, len(split_user_languages)):
        if other_languages.__contains__(split_user_languages[i]):
            other_languages.remove(split_user_languages[i])
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for i in range(0, len(other_languages)):
        item = types.KeyboardButton(other_languages[i])
        markup.add(item)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", reply_markup=markup)


@bot.message_handler(commands=['my_languages'])
def get_my_languages_message(message):
    users_languages = get_languages(message.from_user.id)
    split_user_languages = re.split("&", users_languages)
    help_string = ""
    for i in range(0, len(split_user_languages)):
        help_string += split_user_languages[i] + "\n"

    if help_string == "\n":
        bot.send_message(message.chat.id, "–í—ã –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞ :(")
    else:
        bot.send_message(message.chat.id, help_string)
#–¥–µ–ª–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(commands=['add'])
def creating_quiz(message):
    users_languages = get_languages(message.from_user.id)
    split_user_languages = re.split("&", users_languages)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for i in range(0, len(split_user_languages)):
        split_user_languages[i] = split_user_languages[i][3:]
    for i in range(0, len(split_user_languages)):
        item = types.KeyboardButton(split_user_languages[i])
        markup.add(item)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", reply_markup=markup)
#
# #—Å–æ–∑–¥–∞–Ω–∏–µ –∫–≤–∏–∑–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–¥ —Å–ª–æ–≤–∞—Ä—è
# @bot.message_handler(commands=['quiz'])
# def creating_quiz(message):
##–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∞–π–ª —Å–æ —Å–ª–æ–≤–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
#

@bot.message_handler(content_types=['text'])
def languages_handling(message):
    a = telebot.types.ReplyKeyboardRemove()
    if message.text == "üá¨üáß English":
        str = "üá¨üáß English"
        bot.send_message(message.chat.id, 'Now you are a englishman', reply_markup=a)
        set_language(message.from_user.id, str)
        # file = Path('C:\\Users\\Natasha\\PycharmProjects\\TGbot_orig\\{}_eng.txt'.format(message.chat.id)).touch()
        # done_file = convert_to_binary_data('C:\\Users\\Natasha\\PycharmProjects\\TGbot_orig\\{}_eng.txt'.format(message.chat.id))
        # sqllite_db.cursor.execute('UPDATE users SET vocabulary_eng = ? WHERE user_id = ?', (done_file, user_id))
        # sqllite_db.connection.commit()


    elif message.text == "üá©üá™ Deutsch":
        str = "üá©üá™ Deutsch"
        bot.send_message(message.chat.id, 'Jetzt du bist Deutsch Person', reply_markup=a)
        set_language(message.from_user.id, str)
        # file = Path('C:\\Users\\Natasha\\PycharmProjects\\TGbot_orig\\{}_deu.txt'.format(message.chat.id)).touch()
        # done_file = convert_to_binary_data(file)
        #
        # sqllite_db.cursor.execute('UPDATE users SET vocabulary_deu = ? WHERE user_id = ?',
        #                           (done_file, message.from_user.id))
        # sqllite_db.connection.commit()
    elif message.text == "üá∑üá∫ –†—É—Å—Å–∫–∏–π":
        bot.send_message(message.chat.id, '–£–π–¥–∏ –æ—Ç—Å—é–¥–∞, –ø–∏–¥–æ—Ä –≥—Ä—è–∑–Ω—ã–π')

# @bot.message_handler(content_types=['text'])
# def vocab_handling(message):
#     a = telebot.types.ReplyKeyboardRemove()
#     if message.text == "English":

# ----------------------------------------------------------
bot.polling(none_stop=True)
